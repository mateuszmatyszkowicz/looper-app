name: Super-Linter

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  #super-lint:
    # Name the Job
    #name: Lint code base
    # Set the type of machine to run on
    #runs-on: ubuntu-latest

    #steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      #- name: Checkout code
      #  uses: actions/checkout@v2

      # Runs the Super-Linter action
      # - name: Run Super-Linter
      #   uses: github/super-linter@v3
      #   env:
      #     DEFAULT_BRANCH: main
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  semantic-versioning:
    # Name the job
    name: Semantic Versioning
    runs-on: ubuntu-latest
    steps:
      - name: Git Semantic Version
        uses: paulhatch/semantic-version@v3
        with:
          # The branch to count commits on
          branch: "master"
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease.${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          namespace: project-b
